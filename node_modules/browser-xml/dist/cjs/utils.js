"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.groupBy = exports.isValidDate = void 0;
/**
 * __isValidDate__
 * @param {string} dateString A string that may or may not represent a date.
 * @returns {boolean} `true` if the string can be coerced into a date, otherwise `false`.
 */
const isValidDate = (dateString) => {
    const date = new Date(dateString);
    return date instanceof Date && !isNaN(Date.parse(dateString));
};
exports.isValidDate = isValidDate;
/**
 * __groupBy__
 * @param {Array<T>} arr An array of elements that all share a key.
 * @param {string} key The key used to group array elements.
 * @returns {object} An object whose keys are the different values of `key` in the original array. Each value is an array of elements from `arr` who have matching values of `key`.
 */
const groupBy = (arr, key) => {
    if (arr.some((el) => typeof el[key] !== "string")) {
        throw Error(`Each element of the array must have a key ${String(key)} and it's value must be a string.`);
    }
    const res = {};
    for (const item of arr) {
        const k = String(item[key]);
        delete item[key];
        if (res[k] === undefined) {
            res[k] = [];
        }
        res[k].push(item);
    }
    return res;
};
exports.groupBy = groupBy;
